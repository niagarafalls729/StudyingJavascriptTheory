저번에 공부한 args 를 나는 일부만 알았다는 점에서 
조금 큰 충격이었다.
근데 곰곰히 주말에 바쁜와중에 생각해보고, 찾아본점을 정리하고자한다.



왜 실무에서 ...args를 잘 안 쓸까?

1. 대부분의 함수는 정해진 인자를 받기 때문
실제 개발에서는 함수의 매개변수가 대부분 정해져 있기떄문이 아닐까? 
function 로그인(아이디, 비밀번호) {
    if (!아이디 || !비밀번호) {
        console.log("아이디와 비밀번호를 입력하세요.");
        return;
    }
    console.log(`로그인 시도: ${아이디}`);
}
로그인("user123", "password"); 

이런식으로. 누가 함수에 인자를 ( ...args )로 한단 말인가..

2. 구조화된 데이터를 다룰 때 객체를 더 많이 사용함
웹 개발에서는 보통 객체(Object)나 배열(Array)로 데이터를 주고받음.

function 회원정보({ 이름, 나이, 이메일 }) {
    console.log(`이름: ${이름}, 나이: ${나이}, 이메일: ${이메일}`);
}

회원정보({ 이름: "홍길동", 나이: 30, 이메일: "hong@example.com" });

✅ 객체를 사용하면 매개변수 순서와 개수에 신경 쓸 필요가 없음
✅ 필요한 값만 전달할 수도 있음 (이메일을 빼도 실행 가능)
✅ 가변 인자를 받는 ...args보다 가독성이 더 좋음

3. ...args는 특별한 상황에서만 유용함
그렇다면 ...args는 언제 유용할까?

✔ 가변적인 개수의 인자를 처리할 때
✔ 배열 메서드와 함께 유용하게 사용할 때
✔ 단순한 유틸리티 함수에서 활용할 때

function 합계(...숫자들) {
    return 숫자들.reduce((누적, 현재값) => 누적 + 현재값, 0);
}

console.log(합계(1, 2, 3, 4, 5)); // 15
console.log(합계(10, 20)); // 30


실무에서 ...args를 자주 안 쓰는 이유 정리
1️⃣ 일반적으로 함수의 매개변수는 개수가 정해져 있음
2️⃣ 웹 개발에서는 구조화된 데이터를 주고받기 때문에 객체를 더 많이 사용함
3️⃣ 가변 인자가 필요한 경우가 드물고, 대부분의 데이터 처리는 배열이나 객체로 해결 가능함
4️⃣ ...args는 주로 유틸리티 함수에서 활용되지만, 실무에서는 정형화된 데이터가 많아 필요성이 낮음

결론적으로, ...args는 특정한 상황에서 유용하지만, 일반적인 웹 개발에서는 객체나 배열을 활용한 데이터 처리 방식이 더 익숙하고 효율적이기 때문에 잘 사용되지 않는 다

끝
몰랐으니 부끄럽지만 더 알아보고 공부하자.
공부를 안하는게 더 부끄럽다 생각이 든다.